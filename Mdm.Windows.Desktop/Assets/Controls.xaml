<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Mdm.Windows.Desktop.Assets">

    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorPrimaryButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorPrimaryButtonForeground}"/>
        <Setter Property="Padding" Value="20,6,20,6"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="16"/>
                            </Style>
                        </Border.Style>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackgroundHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackgroundDisabled}"/>
                <Setter Property="Cursor" Value="No"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AccentButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{DynamicResource ColorAccentButtonBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorAccentButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorAccentButtonForeground}"/>
        <Setter Property="Padding" Value="20,6,20,6"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="16"/>
                            </Style>
                        </Border.Style>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorAccentButtonBackgroundHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource ColorAccentButtonBackgroundDisabled}"/>
                <Setter Property="Cursor" Value="No"/>
            </Trigger>
        </Style.Triggers>
    </Style>

  
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorButtonForeground}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </Border.Style>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorButtonBackgroundHover}"/>
                <Setter Property="Foreground" Value="{DynamicResource ColorButtonForegroundHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  x:Key="IconButtonLargeStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>
    </Style> 
    
    <Style x:Key="IconBorderedButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1 "/>
        <!--<Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>-->
    </Style>


    <Style x:Key="IconBorderedButtonSearchStyle" TargetType="Button" BasedOn="{StaticResource IconBorderedButtonStyle}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Padding" Value="1"/>
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="Button"> 
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorButtonForeground}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FontFamily" Value="{StaticResource Filson}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="12"/>
                            </Style>
                        </Border.Style>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>-->
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="{StaticResource Filson}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="18"/>
                            </Style>
                        </Border.Style>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AccentTextButtonStyle" TargetType="Button" BasedOn="{StaticResource DialogButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ColorAccentButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorAccentButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorAccentButtonForeground}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="{StaticResource Filson}"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorButtonBackgroundHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="PrimaryTextButtonStyle" TargetType="Button" BasedOn="{StaticResource DialogButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorPrimaryButtonBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorPrimaryButtonForeground}"/> 
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackground}"/>
				 <Setter Property="Foreground" Value="{DynamicResource ColorPrimaryButtonForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DialogStyle" TargetType="UserControl">
        <Setter Property="Background" Value="{DynamicResource ColorDialogBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorDialogForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Filson}"/>
    </Style>

    <Style x:Key="ErrorStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Red"/>
    </Style>

    <Style TargetType="TextBox" x:Key="SearchBoxStyle">
        <Setter Property="FontFamily" Value="{StaticResource Filson}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorQueueSheetForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorQueueSheetBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ColorQueueSheetForeground}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ColorQueueSheetForegroundSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>