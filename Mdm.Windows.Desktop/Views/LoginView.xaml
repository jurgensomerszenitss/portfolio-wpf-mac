<UserControl x:Class="Mdm.Windows.Desktop.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mdm.Windows.Desktop.Views"
             xmlns:assets="clr-namespace:Mdm.Windows.Desktop.Assets"
             mc:Ignorable="d" 
             Width="320" Height="640"
              Style="{DynamicResource DialogStyle}"
             d:DesignHeight="640" d:DesignWidth="320">

    <UserControl.Resources>
        <Style TargetType="TextBlock" x:Key="LoginTextLabelStyle">
            <Setter Property="FontFamily" Value="Filson"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="PlaceHolderStyle">
            <Setter Property="FontFamily" Value="Filson"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="CaretBrush" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorButtonBorder}"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <TextBlock Style="{DynamicResource ErrorStyle}"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="LoginTextBoxStyle">
            <Setter Property="FontFamily" Value="{StaticResource Filson}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="CaretBrush" Value="{DynamicResource ColorDialogForeground}"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorButtonBorder}"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <TextBlock FontSize="11" FontStyle="Italic" Foreground="Red"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" x:Key="LoginCheckBoxStyle">
            <Setter Property="Foreground" Value="{DynamicResource ColorAccentForeground}"/>
            <Setter Property="FontFamily" Value="Filson"/>
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" SnapsToDevicePixels="True" Stroke="{DynamicResource ColorDialogForeground}"  StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tick" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="blackframe" Stroke="{DynamicResource ColorDialogForeground}" Fill="Transparent" Width="16" Height="16"/>
                            <Ellipse x:Name="background" Margin="2" Fill="Transparent" Width="12" Height="12"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0,0,0"/>
                            <Path x:Name="tick" Fill="{DynamicResource ColorCheckboxChecked}" Data="F1 M 4.325,7.852 C 4.175,7.852 4.026,7.807 3.900,7.720 L 0.325,5.262 C -0.016,5.027 -0.103,4.560 0.132,4.219 C 0.367,3.877 0.833,3.792 1.175,4.025 L 4.091,6.030 L 7.478,0.365 C 7.690,0.010 8.151,-0.107 8.506,0.106 C 8.861,0.319 8.978,0.779 8.765,1.135 L 4.969,7.486 C 4.863,7.664 4.688,7.790 4.485,7.834 C 4.432,7.846 4.378,7.852 4.325,7.852 L 4.325,7.852 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource ColorCheckboxChecked}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LoginButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackground}"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorPrimaryButtonForeground}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="{StaticResource Filson}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="theBorder" Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="28"/>
                                </Style>
                            </Border.Style>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource ColorPrimaryButtonBackgroundDisabled}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ColorPrimaryButtonForegroundDisabled}"/>
                    <Setter Property="Cursor" Value="No"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LoginResultTextLabel" TargetType="TextBlock" BasedOn="{StaticResource LoginTextLabelStyle}">
            <Setter Property="Foreground" Value="Green"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoginOk}" Value="False">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ForgotButtonStyle" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="77"/>
            <Setter Property="Height" Value="24"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ContentControl Content="{DynamicResource Logo}" MaxHeight="40" Height="40" Width="130" Margin="40,80,150,520" />

        <TextBlock Style="{DynamicResource LoginTextLabelStyle}" Text="Welcome!" Width="151" Height="20" Margin="40,136,129,464"/>
        <TextBlock Style="{DynamicResource LoginTextLabelStyle}" Text="Excel your Creativity" Width="151" Height="20" Margin="40,156,129,444"/>


        <TextBlock Style="{DynamicResource LoginTextLabelStyle}" Text="Username" Margin="40,226,80,390"  HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <TextBox Style="{DynamicResource LoginTextBoxStyle}" 
                 Text="{Binding UserName, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                 HorizontalAlignment="Center" Margin="0,249,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240"/>

        <TextBlock Style="{DynamicResource LoginTextLabelStyle}" Text="Password" Margin="39,314,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <PasswordBox HorizontalAlignment="Center" Margin="0,332,0,0"  
                     assets:PasswordHelper.Attach="True"
                     assets:PasswordHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     VerticalAlignment="Top" Width="240"/>

        <TextBlock Style="{DynamicResource LoginResultTextLabel}" Text="{Binding LoginResult}" Margin="0,360,0,0"  HorizontalAlignment="Center" VerticalAlignment="Top" Width="241"/>

        <CheckBox Style="{DynamicResource LoginCheckBoxStyle}" Content="Remember" HorizontalAlignment="Left" Margin="40,396,0,0" VerticalAlignment="Top" 
                  IsChecked="{Binding Remember, UpdateSourceTrigger=PropertyChanged}"/>

        <Button Content="Forgot?" Command="{Binding ForgotCommand}" Style="{DynamicResource TextButtonStyle}" HorizontalAlignment="Left" Margin="203,392,0,0" Height="24" Width="77"/>
        <Button Content="Login" HorizontalAlignment="Left" Style="{DynamicResource LoginButtonStyle}"
                Margin="43,478,0,0" VerticalAlignment="Top" Width="136" Height="48"
                Command="{Binding LoginCommand}"/>

        <Border Background="{DynamicResource ColorLoginFooterBackground}" Margin="0,592,0,0"/>


        <TextBlock Style="{DynamicResource LoginTextLabelStyle}" Text="Go to Plotick" Margin="40,604,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top"/>

    </Grid>
</UserControl>
