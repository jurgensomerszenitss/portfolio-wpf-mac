// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using Mdm.App.ViewModels;
using Mdm.MacOS.Assets;

namespace Mdm.MacOS
{
	public partial class UnlockViewController : NSViewController
	{
		private NSViewController _presentor;

		public NSViewController Presentor
		{
			get { return _presentor; }
			set { _presentor = value; }
		}


		public UnlockViewController (IntPtr handle) : base (handle)
		{
		}

        private IUnlockQueueSheetViewModel _unlockViewModel;

        public override async void ViewDidLoad()
        {
            base.ViewDidLoad();
            _unlockViewModel = MainClass.Container.GetInstance<IUnlockQueueSheetViewModel>();

			await _unlockViewModel.Initialize();

            _unlockViewModel.OnUnlock += _unlockViewModel_OnUnlock;

			this.View.WantsLayer = true;
			this.View.Layer.BackgroundColor = Colors.ColorSettingsBackground.CGColor;

			_fldDigit1.FocusRingType = NSFocusRingType.None;
			_fldDigit2.FocusRingType = NSFocusRingType.None;
			_fldDigit3.FocusRingType = NSFocusRingType.None;
			_fldDigit4.FocusRingType = NSFocusRingType.None;

			_btnCancel.WantsLayer = true;
			_btnCancel.Layer.CornerRadius = 20;
			_btnCancel.Layer.BorderWidth = 1;
			_btnCancel.Layer.BorderColor = Colors.ColorSettingsButtonCancel.CGColor;

			_btnSave.WantsLayer = true;
			_btnSave.Layer.CornerRadius = 20;
			_btnSave.Layer.BorderWidth = 1;
			_btnSave.Layer.BorderColor = Colors.ColorSettingsButtonSave.CGColor;
			_btnSave.Layer.BackgroundColor = Colors.ColorSettingsButtonSave.CGColor;
		}

        private void _unlockViewModel_OnUnlock(object sender, EventArgs e)
        {
			CloseDialog(true);
        }

        partial void CancelClicked(NSObject sender)
        {
			_unlockViewModel.CancelCommand.Execute(null);
			CloseDialog(false);
		}

        partial void OkClicked(NSObject sender)
        {
			_unlockViewModel.Digit1 = _fldDigit1.IntValue;
			_unlockViewModel.Digit2 = _fldDigit2.IntValue;
			_unlockViewModel.Digit3 = _fldDigit3.IntValue;
			_unlockViewModel.Digit4 = _fldDigit4.IntValue;

			_unlockViewModel.UnlockCommand.Execute(null);
		}

		private void CloseDialog(bool accepted)
		{
			if (accepted) Accepted?.Invoke(this, EventArgs.Empty);
			BeginInvokeOnMainThread(() => Presentor.DismissViewController(this));
		}

		public event EventHandler Accepted;

	}
}
